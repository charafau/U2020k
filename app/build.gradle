apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 25
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "com.nullpointerbay.u2020k"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        prod.java.srcDirs += 'src/prod/kotlin'
        mock.java.srcDirs += 'src/mock/kotlin'
        test.java.srcDirs += 'src/test/kotlin'

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$supportlib_version"
    compile "com.android.support:cardview-v7:$supportlib_version"
    compile "com.android.support:recyclerview-v7:$supportlib_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.squareup.retrofit2:retrofit:2.1.0"
    compile "com.squareup.retrofit2:converter-gson:2.1.0"
    compile "com.squareup.retrofit2:adapter-rxjava:2.1.0"
    compile 'com.github.salomonbrys.kotson:kotson:2.3.0'

    compile "com.google.code.gson:gson:2.7"
    compile "com.github.salomonbrys.kodein:kodein:$kodein_version"
    compile "com.github.salomonbrys.kodein:kodein-android:$kodein_version"

    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'

    compile "org.jetbrains.anko:anko-sdk21:$anko_version"
    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    compile "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
    compile "org.jetbrains.anko:anko-cardview-v7:$anko_version"

    compile 'com.squareup.picasso:picasso:2.5.2'

    testCompile 'junit:junit:4.12'

    testCompile 'org.jetbrains.spek:spek-api:1.0.89'
    testCompile 'org.jetbrains.spek:spek-junit-platform-engine:1.0.89'
    testCompile 'org.junit.platform:junit-platform-runner:1.0.0-M2'
    testCompile "com.nhaarman:mockito-kotlin:0.10.0"


}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportlib_version"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

repositories {
    mavenCentral()
}
